name: Build Macos

on:
  push:
    branches: [v3]
  pull_request:
    branches: [v3]
env:
  UPLOAD_BIN_FILE: true

jobs:
  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.22.x]
        platform: [macos-latest]
        arch: [386, amd64]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          ref: v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build ${{ matrix.platform }} ${{ matrix.arch }} with Go
        if: (matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest') && matrix.arch == 'amd64' && env.UPLOAD_BIN_FILE
        id: build_linux_amd64
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        run: |
          go mod tidy
          export GOARCH=${{ matrix.arch }}
          echo "FATENAME=fate_$(go env GOOS)_$(go env GOARCH)" >> $GITHUB_ENV
          echo "$(go env GOOS) $(go env GOARCH)"

          echo "building"
          go build -o fate_$(go env GOOS)_$(go env GOARCH) -v ./cmd/console

          echo "compress"
          tar -zcvf fate_$(go env GOOS)_$(go env GOARCH).tar.gz ./fate_$(go env GOOS)_$(go env GOARCH)

      - name: Build ${{ matrix.platform }} ${{ matrix.arch }} with Go
        if: matrix.platform == 'ubuntu-latest' && matrix.arch == '386' && env.UPLOAD_BIN_FILE
        id: build_linux_386
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        run: |
          go mod tidy
          export GOARCH=${{ matrix.arch }}
          echo "FATENAME=fate_$(go env GOOS)_$(go env GOARCH)" >> $GITHUB_ENV
          echo "$(go env GOOS) $(go env GOARCH)"

          echo "building"
          go build -o fate_$(go env GOOS)_$(go env GOARCH) -v ./cmd/console

          echo "compress"
          tar -zcvf fate_$(go env GOOS)_$(go env GOARCH).tar.gz ./fate_$(go env GOOS)_$(go env GOARCH)

      - name: Upload Linux
        uses: actions/upload-artifact@master
        if: (matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest') && env.UPLOAD_BIN_FILE
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        with:
          name: ${{ env.FATENAME }}.tar.gz
          path: ${{ env.FATENAME }}.tar.gz

      - name: Create Release
        id: create_release_linux
        if: (matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest') && env.UPLOAD_BIN_FILE
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        with:
          artifacts: "${{ env.FATENAME }}.tar.gz"
          allowUpdates: true
          commit: master
          tag: auto_build
          body: |
            This is only a latest build from master
            **Version: https://github.com/babyname/fate/commit/${{ github.sha }}**
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
