name: Build Windows

on:
  push:
    branches: [v3]
  pull_request:
    branches: [v3]
env:
  UPLOAD_BIN_FILE: true

jobs:
  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.22.x]
        platform: [windows-latest]
        arch: [386, amd64]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Cleanup pre-installed tools
        if: matrix.platform != 'windows-latest'
        run: |
          # This is a fix for https://github.com/actions/virtual-environments/issues/1918
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build ${{ matrix.platform }} ${{ matrix.arch }} with Go
        if: matrix.platform == 'windows-latest' && matrix.arch == 'amd64' && env.UPLOAD_BIN_FILE
        id: build_windows_amd64
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        run: |
          go mod tidy
          set GOARCH=${{ matrix.arch }}
          echo "FATENAME=fate_windows_amd64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "building"
          go build -o fate_windows_amd64.exe -v ./cmd/console

          echo "compress"
          Compress-Archive -Path fate_windows_amd64.exe -DestinationPath fate_windows_amd64.zip

      - name: Build ${{ matrix.platform }} ${{ matrix.arch }} with Go
        if: matrix.platform == 'windows-latest' && matrix.arch == '386' && env.UPLOAD_BIN_FILE
        id: build_windows_386
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        run: |
          go mod tidy
          set GOARCH=${{ matrix.arch }}
          echo "FATENAME=fate_windows_386" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "building"
          go build -o fate_windows_386.exe -v ./cmd/console

          echo "compress"
          Compress-Archive -Path fate_windows_386.exe -DestinationPath fate_windows_386.zip

      - name: Upload Windows
        uses: actions/upload-artifact@master
        if: matrix.platform == 'windows-latest' && env.UPLOAD_BIN_FILE
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        with:
          name: ${{ env.FATENAME }}.zip
          path: ${{ env.FATENAME }}.zip

      - name: Create Release
        id: create_release_windows
        if: matrix.platform == 'windows-latest' && env.UPLOAD_BIN_FILE
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        with:
          artifacts: "${{ env.FATENAME }}.zip"
          allowUpdates: true
          commit: master
          tag: auto_build
          body: |
            This is only a latest build from master
            **Version: https://github.com/babyname/fate/commit/${{ github.sha }}**
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
